Notes:

1.g group_name1 group_name2 ... -> default group name is 'default'
2.o object_name                 -> user defined no default

-------------------------------------------------------------------------
Grouping

There are four statements in the .obj file to help you manipulate groups
of elements:

o	Gropu name statements are used to organize collections of
	elements and simplify data manipulation for operations in
	Model.

o	Smoothing group statements let you identify elements over which
	normals are to be interpolated to give those elements a smooth,
	non-faceted appearance.  This is a quick way to specify vertex
	normals.

o	Merging group statements are used to ideneify free-form elements
	that should be inspected for adjacency detection.  You can also
	use merging groups to exclude surfaces which are close enough to
	be considered adjacent but should not be merged.

o	Object name statements let you assign a name to an entire object
	in a single file.

All grouping statements are state-setting.  This means that once a
group statement is set, it alpplies to all elements that follow
until the next group statement.

This portion of a sample file shows a single element which belongs to
three groups.  The smoothing group is turned off.

    g square thing all
    s off
    f 1 2 3 4

This example shows two surfaces in merging group 1 with a merge
resolution of 0.5.

    mg 1 .5
    surf 0.0 1.0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
    surf 0.0 1.0 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32

Syntax

g group_name1 group_name2 . . .

    Polygonal and free-form geometry statement.

    Specifies the group name for the elements that follow it. You can
    have multiple group names. If there are multiple groups on one
    line, the data that follows belong to all groups. Group information
    is optional.

    group_name is the name for the group. Letters, numbers, and
    combinations of letters and numbers are accepted for group names.
    The default group name is default.

s group_number

    Polygonal and free-form geometry statement.

    Sets the smoothing group for the elements that follow it. If you do
    not want to use a smoothing group, specify off or a value of 0.

    To display with smooth shading in Model and PreView, you must
    create vertex normals after you have assigned the smoothing groups.
    You can create vertex normals with the vn statement or with the
    Model program.

    To smooth polygonal geometry for rendering with Image, it is
    sufficient to put elements in some smoothing group. However, vertex
    normals override smoothing information for Image.

    group_number is the smoothing group number. To turn off smoothing
    groups, use a value of 0 or off. Polygonal elements use group
    numbers to put elements in different smoothing groups. For
    free-form surfaces, smoothing groups are either turned on or off;
    there is no difference between values greater than 0.

mg group_number res

    Free-form geometry statement.

    Sets the merging group and merge resolution for the free-form
    surfaces that follow it. If you do not want to use a merging group,
    specify off or a value of 0.

    Adjacency detection is performed only within groups, never between
    groups. Connectivity between surfaces in different merging groups
    is not allowed. Surfaces in the same merging group are merged
    together along edges that are within the distance res apart.

    NOTE: Adjacency detection is an expensive numerical comparison
    process.  It is best to restrict this process to as small a domain
    as possible by using small merging groups.

    group_number is the merging group number. To turn off adjacency
    detection, use a value of 0 or off.

    res is the maximum distance between two surfaces that will be
    merged together. The resolution must be a value greater than 0.
    This is a required argument only when using merging groups.

o object_name

    Polygonal and free-form geometry statement.

    Optional statement; it is not processed by any Wavefront programs.
    It specifies a user-defined object name for the elements defined
    after this statement.

    object_name is the user-defined object name. There is no default.

Examples

1.      Cube with group names

The following example is a cube with each of its faces placed in a
separate group. In addition, all elements belong to the group cube.

    v 0.000000 2.000000 2.000000
    v 0.000000 0.000000 2.000000
    v 2.000000 0.000000 2.000000
    v 2.000000 2.000000 2.000000
    v 0.000000 2.000000 0.000000
    v 0.000000 0.000000 0.000000
    v 2.000000 0.000000 0.000000
    v 2.000000 2.000000 0.000000
    # 8 vertices

    g front cube
    f 1 2 3 4
    g back cube
    f 8 7 6 5
    g right cube
    f 4 3 7 8
    g top cube
    f 5 1 4 8
    g left cube
    f 5 6 2 1
    g bottom cube
    f 2 6 7 3
    # 6 elements


2.      Two adjoining squares with a smoothing group

This example shows two adjoining squares that share a common edge. The
squares are placed in a smoothing group to ensure that their common
edge will be smoothed when rendered with Image.

    v 0.000000 2.000000 0.000000
    v 0.000000 0.000000 0.000000
    v 2.000000 0.000000 0.000000
    v 2.000000 2.000000 0.000000
    v 4.000000 0.000000 -1.255298
    v 4.000000 2.000000 -1.255298
    # 6 vertices

    g all
    s 1
    f 1 2 3 4
    f 4 3 5 6
    # 2 elements


3.      Two adjoining squares with vertex normals

This example also shows two squares that share a common edge. Vertex
normals have been added to the corners of each square to ensure that
their common edge will be smoothed during display in Model and PreView
and when rendered with Image.

    v 0.000000 2.000000 0.000000
    v 0.000000 0.000000 0.000000
    v 2.000000 0.000000 0.000000
    v 2.000000 2.000000 0.000000
    v 4.000000 0.000000 -1.255298
    v 4.000000 2.000000 -1.255298
    vn 0.000000 0.000000 1.000000
    vn 0.000000 0.000000 1.000000
    vn 0.276597 0.000000 0.960986
    vn 0.276597 0.000000 0.960986
    vn 0.531611 0.000000 0.846988
    vn 0.531611 0.000000 0.846988
    # 6 vertices

    # 6 normals

    g all
    s 1
    f 1//1 2//2 3//3 4//4
    f 4//4 3//3 5//5 6//6
    # 2 elements


4.      Merging group

This example shows two Bezier surfaces that meet at a common edge. They
have both been placed in the same merging group to ensure continuity at
the edge where they meet. This prevents "cracks" from appearing along
the seam between the two surfaces during rendering. Merging groups will
be ignored during flat-shading, smooth-shading, and material shading of
the surface.

    v -4.949854 -5.000000 0.000000
    v -4.949854 -1.666667 0.000000
    v -4.949854 1.666667 0.000000
    v -4.949854 5.000000 0.000000
    v -1.616521 -5.000000 0.000000
    v -1.616521 -1.666667 0.000000
    v -1.616521 1.666667 0.000000
    v -1.616521 5.000000 0.000000
    v 1.716813 -5.000000 0.000000
    v 1.716813 -1.666667 0.000000
    v 1.716813 1.666667 0.000000
    v 1.716813 5.000000 0.000000
    v 5.050146 -5.000000 0.000000
    v 5.050146 -1.666667 0.000000
    v 5.050146 1.666667 0.000000
    v 5.050146 5.000000 0.000000
    v -15.015566 -4.974991 0.000000
    v -15.015566 -1.641658 0.000000
    v -15.015566 1.691675 0.000000
    v -15.015566 5.025009 0.000000
    v -11.682233 -4.974991 0.000000
    v -11.682233 -1.641658 0.000000
    v -11.682233 1.691675 0.000000
    v -11.682233 5.025009 0.000000
    v -8.348900 -4.974991 0.000000
    v -8.348900 -1.641658 0.000000
    v -8.348900 1.691675 0.000000
    v -8.348900 5.025009 0.000000
    v -5.015566 -4.974991 0.000000
    v -5.015566 -1.641658 0.000000
    v -5.015566 1.691675 0.000000
    v -5.015566 5.025009 0.000000

    mg 1 0.500000

    cstype bezier
    deg 3 3
    surf 0.000000 1.000000 0.000000 1.000000 13 14 \
    15 16 9 10 11 12 5 6 7 8 1 2 3 4
    parm u 0.000000 1.000000
    parm v 0.000000 1.000000
    end
    surf 0.000000 1.000000 0.000000 1.000000 29 30 31 32 25 26 27 28 21 22 \
    23 24 17 18 19 20
    parm u 0.000000 1.000000
    parm v 0.000000 1.000000
    end
------------------------------------------------------------------------------